{"version":3,"sources":["Constants.js","Util.js","components/Axis.js","components/BarChart.js","components/LineChart.js","components/PieChart.js","components/StackedBarChart.js","App.js","serviceWorker.js","index.js"],"names":["Colors","selected","plain","path","barChartData","date","value","rand","min","max","randomNumber","Math","random","floor","generateLineData","data","x","y","times","i","prev","push","STACKED_BAR_KEYS","generateStackData","index","stack","forEach","key","AxisOrientation","Axis","_PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","axisRef","createRef","inherits","createClass","updateAxis","axis","select","current","props","orientation","rotateText","selectAll","style","attr","_this$props","react_default","a","createElement","className","ref","transform","undefined","axisTop","axisBottom","axisLeft","axisRight","nextProps","scale","tickFormat","tFormat","d","getAxis","d3Axis","PureComponent","margins","BarChart","bars","hoveredBar","xScale","scaleBand","yScale","scaleLinear","hoverBar","setState","_this2","width","height","_this$state","map","onMouseOver","onMouseOut","fill","Axis_Axis","timeFormat","prevState","timeDomain","tempMax","rangeRound","padding","domain","range","nice","y1","y2","bandwidth","LineChart","lines","circles","lineGenerator","line","_this$state2","react","strokeWidth","stroke","dot","cx","cy","r","renderAxis","renderData","multi","curve","showDataPoints","dataToShow","flatten","xExtent","extent","yExtent","curveMonotoneX","circle","PieChart","arcGenerator","arc","pieGenerator","pie","slices","slice","colors","arcWidth","outerRadius","innerRadius","sort","StackedBarChart","colorScale","scaleOrdinal","schemeCategory10","keys","xAccessor","stackedData","stacked","maxYDomain","d2","yScaleRange","stackedItem","abs","App","BarChart_BarChart","LineChart_LineChart","PieChart_PieChart","StackedBarChart_StackedBarChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8PACaA,SAAS,CACpBC,SAAU,UACVC,MAAO,UACPC,KAAM,CAAC,UAAW,UAAW,UAAW,aAG7BC,EAAe,CAC1B,CAACC,KAAM,UAAWC,MAAO,IACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,KACzB,CAACD,KAAM,UAAWC,MAAO,cCjBpB,SAASC,EAAKC,EAAKC,GACxB,IAAMC,EAAeC,KAAKC,UAAYH,EAAMD,GAAOA,EACnD,OAAOG,KAAKE,MAAMH,GAWb,SAASI,IACd,IAAMC,EAAO,CACX,CACEC,EAAGT,EAAK,GAAI,KACZU,EAAGV,EAAK,IAAK,OAajB,OATAW,gBAAM,GAAI,SAAAC,GACR,IAAMC,EAAOL,EAAKI,GAElBJ,EAAKM,KAAK,CACRL,EAAGI,EAAKJ,EAAI,GACZC,EAAGV,EAAK,IAAK,SAIVQ,EAGF,IAAMO,EAAmB,CAAC,SAAU,UAAW,SAC/C,SAASC,IACf,IAAMR,EAAO,GAcb,OAZAG,gBAAM,GAAI,SAACM,GACT,IAAMC,EAAQ,CACZD,SAGFE,kBAAQJ,EAAkB,SAACK,GACzBF,EAAME,GAAOpB,EAAK,EAAG,OAGvBQ,EAAKM,KAAKI,KAGLV,qCC/CKa,EACN,MADMA,EAEL,OAFKA,EAGH,SAHGA,EAIJ,QAGIC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,GADVf,EAGEgB,QAAUC,sBAHZjB,EAAA,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAAC,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAA,EAAAF,IAAA,oBAAArB,MAAA,WAoCI6B,KAAKiB,eApCT,CAAAzB,IAAA,qBAAArB,MAAA,WAwCI6B,KAAKiB,eAxCT,CAAAzB,IAAA,aAAArB,MAAA,WA4CI,IAAM+C,EAAOC,YAAOnB,KAAKa,QAAQO,SAC9BX,KAAKT,KAAKY,MAAMM,MAEflB,KAAKqB,MAAMC,cAAgB7B,GAA0BO,KAAKqB,MAAME,YAClEL,EAAKM,UAAU,QACZC,MAAM,cAAe,OACrBC,KAAK,KAAM,QACXA,KAAK,KAAM,SACXA,KAAK,YAAa,iBApD3B,CAAAlC,IAAA,SAAArB,MAAA,WAwDW,IAAAwD,EACQ3B,KAAKqB,MAAbxC,EADA8C,EACA9C,EAAGC,EADH6C,EACG7C,EAEV,OACE8C,EAAAC,EAAAC,cAAA,KAAGC,UAAW,OAAQC,IAAKhC,KAAKa,QAASoB,UAAS,aAAAtB,OAAe9B,EAAf,MAAA8B,OAAqB7B,EAArB,UA5DxD,EAAAU,IAAA,UAAArB,MAAA,WAMI,OADiD+B,UAAAC,OAAA,QAAA+B,IAAAhC,UAAA,GAAAA,UAAA,GAAtBT,GAEzB,KAAKA,EACH,OAAO0C,IACT,KAAK1C,EACH,OAAO2C,IACT,KAAK3C,EACH,OAAO4C,IACT,KAAK5C,EACH,OAAO6C,IACT,QACE,OAAOD,OAhBf,CAAA7C,IAAA,2BAAArB,MAAA,SAoBkCoE,GAAW,IAClCjB,EAAkCiB,EAAlCjB,YAAakB,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,WAGrBC,EAAUD,GAA0B,SAACE,GAAD,OAAOA,GAMjD,MAAO,CACLzB,KATaxB,EAAKkD,QAAQtB,EAIfuB,GACVL,MAAMA,GACNC,WAAWC,QA5BlBhD,EAAA,CAA0BoD,yBCJpBC,EACC,GADDA,EAEE,GAFFA,EAGG,GAHHA,EAII,GAGGC,EAAb,SAAArD,GAAA,SAAAqD,IAAA,IAAApD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,GAAA,QAAA/C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAkD,IAAAvC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,MAAQ,CACNqC,KAAM,GACNC,WAAY,KAGZC,OAAQC,cACRC,OAAQC,eARZzD,EAYE0D,SAAW,SAAClE,EAAO8B,GACjB,IAAI+B,EAAa,KACb/B,GACFtB,EAAKe,MAAMqC,KAAK1D,QAAQ,SAACoD,EAAG3D,GACtBA,IAAMK,IACR6D,EAAalE,KAKnBa,EAAK2D,SAAS,CACZN,gBAvBNrD,EAAA,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAkD,EAAArD,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAkD,EAAA,EAAAxD,IAAA,SAAArB,MAAA,WAkEW,IAAAsF,EAAAzD,KAAA2B,EACiB3B,KAAKqB,MAAtBqC,EADA/B,EACA+B,MAAOC,EADPhC,EACOgC,OADPC,EAEoC5D,KAAKY,MAAzCsC,EAFAU,EAEAV,WAAYD,EAFZW,EAEYX,KAAME,EAFlBS,EAEkBT,OAAQE,EAF1BO,EAE0BP,OAEjC,OACEzB,EAAAC,EAAAC,cAAA,OAAK4B,MAAOA,EAAOC,OAAQA,GACxBV,EAAKY,IAAI,SAAClB,EAAG3D,GAAJ,OAEN4C,EAAAC,EAAAC,cAAA,QACEgC,YAAa,kBAAML,EAAKF,SAASvE,GAAG,IACpC+E,WAAY,kBAAMN,EAAKF,SAASvE,GAAG,IACnCQ,IAAKR,EACLH,EAAG8D,EAAE9D,EACLC,EAAG6D,EAAE7D,EACL4E,MAAOf,EAAEe,MACTC,OAAQhB,EAAEgB,OACVK,KAAMd,IAAelE,EAAInB,EAAOC,SAAW6E,EAAEqB,SAInDpC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACmC,EAAD,CACEC,WAAYA,YAAW,MACvB1B,MAAOW,EACP7B,YAAa7B,EACb8B,YAAU,EACV1C,EAAG,EACHC,EAAG6E,EAASZ,IAEdnB,EAAAC,EAAAC,cAACmC,EAAD,CACEC,WAAY,SAACvB,GAAD,SAAAhC,OAAUgC,IACtBH,MAAOa,EACP/B,YAAa7B,EACbZ,EAAGkE,EACHjE,EAAG,SApGf,EAAAU,IAAA,2BAAArB,MAAA,SA2BkCoE,EAAW4B,GACzC,IAAK5B,EAAU3D,KAAM,OAAO,KADwB,IAG7CA,EAAuB2D,EAAvB3D,KAAM8E,EAAiBnB,EAAjBmB,MAAOC,EAAUpB,EAAVoB,OACbR,EAAkBgB,EAAlBhB,OAAQE,EAAUc,EAAVd,OAGTe,EAAaxF,EAAKiF,IAAI,SAAAlB,GAAC,OAAIA,EAAEzE,OAC7BmG,EAAU/F,YAAIM,EAAM,SAAA+D,GAAC,OAAIA,EAAExE,QA0BjC,OAxBAgF,EACGmB,WAAW,CAACvB,EAAcW,EAAQX,IAClCwB,QAAQ,IACRC,OAAOJ,GAEVf,EACGoB,MAAM,CAACd,EAASZ,EAAgBA,IAChCyB,OAAO,CAAC,EAAGH,IACXK,OAgBI,CACLzB,KAdWrE,EAAKiF,IAAI,SAAAlB,GACpB,IAAMgC,EAAKtB,EAAOV,EAAExE,OACdyG,EAAKvB,EAAO,GAElB,MAAO,CACLxE,EAAGsE,EAAOR,EAAEzE,MACZY,EAAG6F,EACHhB,OAAQiB,EAAKD,EACbjB,MAAOP,EAAO0B,YACdb,KAAMnG,EAAOE,cAzDrBiF,EAAA,CAA8BF,yBCNxBC,EACE,GADFA,EAEG,GAFHA,EAGC,GAHDA,EAII,GAKG+B,EAAb,SAAAnF,GAAA,SAAAmF,IAAA,IAAAlF,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GAAA,QAAA7E,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgF,IAAArE,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNmE,MAAO,GACPC,QAAS,GAGT7B,OAAQG,cACRD,OAAQC,cACR2B,cAAeC,eARnBrF,EAAA,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAgF,EAAAnF,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAgF,EAAA,EAAAtF,IAAA,aAAArB,MAAA,WA4Ee,IACJwF,EAAU3D,KAAKqB,MAAfsC,OADIC,EAEc5D,KAAKY,MAAvBuC,EAFIS,EAEJT,OAAQE,EAFJO,EAEIP,OAEf,OACEzB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACmC,EAAD,CACEzB,MAAOW,EACP7B,YAAa7B,EACbZ,EAAG,EACHC,EAAG6E,EAASZ,EAAiBA,IAE/BnB,EAAAC,EAAAC,cAACmC,EAAD,CACEzB,MAAOa,EACP/B,YAAa7B,EACbZ,EAAG,EACHC,EAAG,OA5Fb,CAAAU,IAAA,aAAArB,MAAA,WAkGe,IAAAgH,EACcnF,KAAKY,MAAvBmE,EADII,EACJJ,MAAOC,EADHG,EACGH,QAEd,OACEpD,EAAAC,EAAAC,cAACsD,EAAA,SAAD,KACGL,EAAMlB,IAAI,SAACqB,EAAMlG,GAChB,OACE4C,EAAAC,EAAAC,cAAA,QACEtC,IAAKR,EACL2D,EAAGuC,EAAKlH,KACRqH,YAAa,EACbrB,KAAM,OACNsB,OAAQJ,EAAKlB,SAIlBgB,EAAQnB,IAAI,SAAC0B,EAAKvG,GACjB,OACE4C,EAAAC,EAAAC,cAAA,UACEtC,IAAKR,EACLwG,GAAID,EAAI1G,EACR4G,GAAIF,EAAIzG,EACRkF,KAAMuB,EAAIvB,KACVsB,OAAQ,OACRI,EA5HQ,SAEtB,CAAAlG,IAAA,SAAArB,MAAA,WAkIW,IAAAwD,EACiB3B,KAAKqB,MAAtBqC,EADA/B,EACA+B,MAAOC,EADPhC,EACOgC,OAEd,OACE/B,EAAAC,EAAAC,cAAA,OAAK4B,MAAOA,EAAOC,OAAQA,GACzB/B,EAAAC,EAAAC,cAAA,KAAGG,UAAS,aAAAtB,OAAeoC,EAAf,MAAApC,OAAgCoC,EAAhC,MACT/C,KAAK2F,aACL3F,KAAK4F,kBAzIhB,EAAApG,IAAA,2BAAArB,MAAA,SAWkCoE,EAAW4B,GAAW,IAC7CvF,EAAqD2D,EAArD3D,KAAM8E,EAA+CnB,EAA/CmB,MAAOC,EAAwCpB,EAAxCoB,OAAQkC,EAAgCtD,EAAhCsD,MAAOC,EAAyBvD,EAAzBuD,MAAOC,EAAkBxD,EAAlBwD,eACnC5C,EAAiCgB,EAAjChB,OAAQE,EAAyBc,EAAzBd,OAAQ4B,EAAiBd,EAAjBc,cAEjBe,EAAaH,EAAQI,kBAAQrH,GAAQA,EAErCsH,EAAUC,YAAOH,EAAY,SAAArD,GAAC,OAAIA,EAAE9D,IACpCuH,EAAUD,YAAOH,EAAY,SAAArD,GAAC,OAAIA,EAAE7D,IAK1CqE,EACGsB,MAAM,CAAC,EAAGf,EAAQX,EAAgBA,IAClCyB,OAAO,CALM,IAKL0B,EAAQ,GAJH,KAIiBA,EAAQ,KACtCxB,OAEHrB,EACGoB,MAAM,CAACd,EAASZ,EAAiBA,EAAa,IAC9CyB,OAAO,CAVM,IAUL4B,EAAQ,GATH,KASiBA,EAAQ,KACtC1B,OAEHO,EAAcpG,EAAE,SAAA8D,GACd,OAAOQ,EAAOR,EAAE9D,KAGlBoG,EAAcnG,EAAE,SAAA6D,GACd,OAAOU,EAAOV,EAAE7D,KAGdgH,GACFb,EAAca,MAAMO,KAGtB,IACMtB,EAAQ,GACRC,EAAU,GAuBhB,OAzBuBa,EAAQjH,EAAO,CAACA,IAIxBW,QAAQ,SAAC2F,EAAM7F,GAC5B,IAAM2E,EAAOnG,EAAOG,KAAKqB,GAEzB0F,EAAM7F,KAAK,CACTlB,KAAMiH,EAAcC,GACpBlB,KAAMA,IAGJ+B,GACFb,EAAK3F,QAAQ,SAACoD,GACZ,IAAM2D,EAAS,CACbzH,EAAGsE,EAAOR,EAAE9D,GACZC,EAAGuE,EAAOV,EAAE7D,GACZkF,KAAMA,GAERgB,EAAQ9F,KAAKoH,OAMZ,CACLvB,QACAC,eAxENF,EAAA,CAA+BhC,iBCblByD,EAAb,SAAA5G,GAAA,SAAA4G,IAAA,IAAA3G,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,GAAA,QAAAtG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyG,IAAA9F,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACN4F,aAAcC,cACdC,aAAcC,cACdC,OAAQ,IAJZ/G,EAAA,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAyG,EAAA5G,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAyG,EAAA,EAAA/G,IAAA,SAAArB,MAAA,WAgCW,IAAAwD,EACoB3B,KAAKqB,MAAxBqC,EADD/B,EACC+B,MAAOC,EADRhC,EACQgC,OACPiD,EAAW5G,KAAKY,MAAhBgG,OAER,OACEhF,EAAAC,EAAAC,cAAA,OAAK6B,OAAQA,EAAQD,MAAOA,GAC1B9B,EAAAC,EAAAC,cAAA,KAAGG,UAAS,aAAAtB,OAAe+C,EAAQ,EAAvB,MAAA/C,OAA6BgD,EAAS,EAAtC,MACTiD,EAAO/C,IAAI,SAACgD,EAAO7H,GAClB,OAAO4C,EAAAC,EAAAC,cAAA,QAAMtC,IAAKR,EAAG2D,EAAGkE,EAAM7I,KAAMgG,KAAM6C,EAAM7C,cAxC5D,EAAAxE,IAAA,2BAAArB,MAAA,SAOkCoE,EAAW4B,GAAW,IAC5CvF,EAAkC2D,EAAlC3D,KAAMkI,EAA4BvE,EAA5BuE,OAAQpD,EAAoBnB,EAApBmB,MAAOqD,EAAaxE,EAAbwE,SACrBP,EAA+BrC,EAA/BqC,aAAcE,EAAiBvC,EAAjBuC,aAEhBM,EAActD,EAAQ,EACtBuD,EAAcD,EAAcD,EAelC,OAbAL,EAAavI,MAAM,SAACwE,GAAD,OAAOA,IAAGuE,KAAK,MAElCV,EAAaS,YAAYA,GAAaD,YAAYA,GAW3C,CACLJ,OAVaF,EAAa9H,GAAMiF,IAAI,SAAC1F,EAAOa,GAM5C,MALc,CACZhB,KAAMwI,EAAarI,GACnB6F,KAAM8C,EAAO9H,WArBrBuH,EAAA,CAA8BzD,yBCKxBC,EACE,GADFA,EAEG,GAFHA,EAGC,GAHDA,EAII,GAKGoE,EAAb,SAAAxH,GAAA,SAAAwH,IAAA,IAAAvH,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,GAAA,QAAAlH,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAqH,IAAA1G,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNqC,KAAM,GAGNE,OAAQC,cACRC,OAAQC,cACR8D,WAAYC,YAAaC,MAP7BzH,EAAA,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAqH,EAAAxH,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAqH,EAAA,EAAA3H,IAAA,SAAArB,MAAA,WA8DW,IAAAwD,EACmB3B,KAAKqB,MAAvBqC,EADD/B,EACC+B,MAAOC,EADRhC,EACQgC,OADRC,EAEyB5D,KAAKY,MAA7BqC,EAFDW,EAECX,KAAME,EAFPS,EAEOT,OAAQE,EAFfO,EAEeP,OAEtB,OACEzB,EAAAC,EAAAC,cAAA,OAAK4B,MAAOA,EAAOC,OAAQA,GACxBV,EAAKY,IAAI,SAAClB,EAAG3D,GAAJ,OACR4C,EAAAC,EAAAC,cAAA,QAAMtC,IAAKR,EAAGH,EAAG8D,EAAE9D,EAAGC,EAAG6D,EAAE7D,EAAG4E,MAAOf,EAAEe,MAAOC,OAAQhB,EAAEgB,OAAQK,KAAMrB,EAAEqB,SAE1EpC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACmC,EAAD,CACEC,WAAYA,YAAW,MACvB1B,MAAOW,EACP7B,YAAa7B,EACbZ,EAAG,EACHC,EAAG6E,EAASZ,IAEdnB,EAAAC,EAAAC,cAACmC,EAAD,CACEC,WAAY,SAACvB,GAAD,SAAAhC,OAAUgC,IACtBH,MAAOa,EACP/B,YAAa7B,EACbZ,EAAGkE,EACHjE,EAAG,SApFf,EAAAU,IAAA,2BAAArB,MAAA,SAUkCoE,EAAW4B,GAAW,IAC7CvF,EAA6B2D,EAA7B3D,KAAM8E,EAAuBnB,EAAvBmB,MAAOC,EAAgBpB,EAAhBoB,OAAQ4D,EAAQhF,EAARgF,KACrBpE,EAA8BgB,EAA9BhB,OAAQE,EAAsBc,EAAtBd,OAAQ+D,EAAcjD,EAAdiD,WAEjBI,EAAY,SAAC7E,GAAD,OAAOA,EAAEtD,OACrB+E,EAAaxF,EAAKiF,IAAI2D,GAGtBC,EADUnI,cAAQiI,KAAKA,EACTG,CAAQ9I,GAEtB+I,EAAarJ,YAAImJ,EAAa,SAAC9E,GAAD,OAClCrE,YAAIqE,EAAG,SAACiF,GAAD,OACLA,EAAG,OAIPR,EAAW5C,OAAO,CAAC,EAAG+C,EAAKpH,OAAO,IAElCgD,EACGmB,WAAW,CAACvB,EAAcW,EAAQX,IAClCwB,QAhCa,IAiCbC,OAAOJ,GAEV,IAAMyD,EAAc,CAAClE,EAASZ,EAAgBA,GAC9CM,EACGoB,MAAMoD,GACNrD,OAAO,CAAC,EAAGmD,IACXjD,OAEH,IAAMzB,EAAOwE,EAAY5D,IAAI,SAACiE,EAAazI,GACzC,OAAOyI,EAAYjE,IAAI,SAAA1F,GACrB,IAAMU,EAAIsE,EAAOqE,EAAUrJ,EAAMS,OAC3BE,EAAIuE,EAAOlF,EAAM,IAKvB,MAAO,CACLU,IACAC,IACA6E,OAPgBnF,KAAKuJ,IAAI1E,EAAOlF,EAAM,IAAMW,GAQ5C4E,MAPeP,EAAO0B,YAQtBb,KAPWoD,EAAW/H,QAY5B,MAAO,CACL4D,KAAMgD,kBAAQhD,QA1DpBkE,EAAA,CAAqCrE,iBC6DtBkF,mLAlEX,OACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACmG,EAAD,CACEvE,MAAO,IACPC,OAAQ,IACR/E,KAAMX,IAER2D,EAAAC,EAAAC,cAACoG,EAAD,CACExE,MAAO,IACPC,OAAQ,IACRkC,OAAK,EACLjH,KACE,CACED,IACAA,IACAA,OAINiD,EAAAC,EAAAC,cAACoG,EAAD,CACExE,MAAO,IACPC,OAAQ,IACRoC,gBAAc,EACdF,OAAK,EACLjH,KACE,CACED,IACAA,OAINiD,EAAAC,EAAAC,cAACoG,EAAD,CACExE,MAAO,IACPC,OAAQ,IACRoC,gBAAc,EACdF,OAAK,EACLC,OAAK,EACLlH,KACE,CACED,OAINiD,EAAAC,EAAAC,cAACqG,EAAD,CACEzE,MAAO,IACPC,OAAQ,IACR/E,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBkI,OAAQjJ,EAAOG,KACf+I,SAAU,KAEZnF,EAAAC,EAAAC,cAACsG,EAAD,CACE1E,MAAO,IACPC,OAAQ,IACR/E,KAAMQ,IACNmI,KAAMpI,aA5DA2D,iBCCEuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/G,EAAAC,EAAAC,cAAC8G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.57ea5c27.chunk.js","sourcesContent":["\nexport const Colors = {\n  selected: '#018786',\n  plain: '#03DAC6',\n  path: ['#03DAC6', '#90ee02', '#df55f2', '#ff9e22'],\n};\n\nexport const barChartData = [\n  {date: '2013-01', value: 53},\n  {date: '2013-02', value: 165},\n  {date: '2013-03', value: 269},\n  {date: '2013-04', value: 344},\n  {date: '2013-05', value: 376},\n  {date: '2013-06', value: 410},\n  {date: '2013-07', value: 421},\n  {date: '2013-08', value: 405},\n  {date: '2013-09', value: 376},\n  {date: '2013-10', value: 359},\n  {date: '2013-11', value: 392},\n  {date: '2013-12', value: 433},\n];\n","import { times, forEach } from \"lodash\";\n\nexport function rand(min, max) {\n  const randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber);\n}\n\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport function generateLineData() {\n  const data = [\n    {\n      x: rand(60, 100),\n      y: rand(100, 120),\n    },\n  ];\n\n  times(10, i => {\n    const prev = data[i];\n\n    data.push({\n      x: prev.x + 10,\n      y: rand(100, 120),\n    });\n  });\n\n  return data;\n}\n\nexport const STACKED_BAR_KEYS = ['apples', 'oranges', 'trees'];\nexport function generateStackData() {\n const data = [];\n\n times(10, (index) => {\n   const stack = {\n     index,\n   };\n\n   forEach(STACKED_BAR_KEYS, (key) => {\n     stack[key] = rand(0, 100);\n   });\n\n   data.push(stack);\n });\n\n return data;\n}\n","import React, { PureComponent, createRef } from 'react';\nimport { select } from 'd3-selection';\nimport { axisLeft, axisBottom, axisRight, axisTop } from 'd3-axis';\n\nexport const AxisOrientation = {\n  TOP: 'TOP',\n  LEFT: 'LEFT',\n  BOTTOM: 'BOTTOM',\n  RIGHT: 'RIGHT',\n};\n\nexport class Axis extends PureComponent {\n  state = {};\n\n  axisRef = createRef();\n\n  static getAxis(orientation = AxisOrientation.LEFT) {\n    switch (orientation) {\n      case AxisOrientation.TOP:\n        return axisTop;\n      case AxisOrientation.BOTTOM:\n        return axisBottom;\n      case AxisOrientation.LEFT:\n        return axisLeft;\n      case AxisOrientation.RIGHT:\n        return axisRight;\n      default:\n        return axisLeft;\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const {orientation, scale, tickFormat} = nextProps;\n    const d3Axis = Axis.getAxis(orientation);\n\n    const tFormat = tickFormat ? tickFormat : (d) => d;\n\n    const axis = d3Axis()\n      .scale(scale)\n      .tickFormat(tFormat);\n\n    return {\n      axis,\n    }\n  }\n\n  componentDidMount() {\n    this.updateAxis();\n  }\n\n  componentDidUpdate() {\n    this.updateAxis();\n  }\n\n  updateAxis() {\n    const axis = select(this.axisRef.current)\n      .call(this.state.axis);\n\n    if (this.props.orientation === AxisOrientation.BOTTOM && this.props.rotateText) {\n      axis.selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-1em')\n        .attr('dy', '-.2em')\n        .attr('transform', 'rotate(-65)');\n    }\n  }\n\n  render() {\n    const {x, y} = this.props;\n\n    return (\n      <g className={'axis'} ref={this.axisRef} transform={`translate(${x}, ${y})`}/>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { Axis, AxisOrientation } from './Axis';\nimport { timeFormat } from 'd3-time-format';\nimport { Colors } from '../Constants';\n\nconst margins = {\n  top: 60,\n  left: 60,\n  right: 60,\n  bottom: 60,\n};\n\nexport class BarChart extends PureComponent {\n\n  state = {\n    bars: [], // array of rects\n    hoveredBar: null,\n\n    // d3 helpers\n    xScale: scaleBand(),\n    yScale: scaleLinear(),\n  };\n\n\n  hoverBar = (index, select) => {\n    let hoveredBar = null;\n    if (select) {\n      this.state.bars.forEach((d, i) => {\n        if (i === index) {\n          hoveredBar = i;\n        }\n      });\n    }\n\n    this.setState({\n      hoveredBar,\n    });\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps.data) return null; // data hasn't been loaded yet so do nothing\n\n    const {data, width, height} = nextProps;\n    const {xScale, yScale} = prevState;\n\n    // data has changed, so recalculate scale domains\n    const timeDomain = data.map(d => d.date);\n    const tempMax = max(data, d => d.value);\n\n    xScale\n      .rangeRound([margins.left, width - margins.right])\n      .padding(.1)\n      .domain(timeDomain);\n\n    yScale\n      .range([height - margins.bottom, margins.top])\n      .domain([0, tempMax])\n      .nice();\n\n    // calculate x and y for each rectangle\n    const bars = data.map(d => {\n      const y1 = yScale(d.value);\n      const y2 = yScale(0);\n\n      return {\n        x: xScale(d.date),\n        y: y1,\n        height: y2 - y1,\n        width: xScale.bandwidth(),\n        fill: Colors.plain,\n      }\n    });\n\n    return {\n      bars,\n    };\n  }\n\n  render() {\n    const {width, height} = this.props;\n    const {hoveredBar, bars, xScale, yScale} = this.state;\n\n    return (\n      <svg width={width} height={height}>\n        {bars.map((d, i) =>\n          (\n            <rect\n              onMouseOver={() => this.hoverBar(i, true)}\n              onMouseOut={() => this.hoverBar(i, false)}\n              key={i}\n              x={d.x}\n              y={d.y}\n              width={d.width}\n              height={d.height}\n              fill={hoveredBar === i ? Colors.selected : d.fill}\n            />\n          )\n        )}\n        <g>\n          <Axis\n            timeFormat={timeFormat('%b')}\n            scale={xScale}\n            orientation={AxisOrientation.BOTTOM}\n            rotateText\n            x={0}\n            y={height - margins.bottom}\n          />\n          <Axis\n            timeFormat={(d) => `${d}`}\n            scale={yScale}\n            orientation={AxisOrientation.LEFT}\n            x={margins.left}\n            y={0}\n          />\n        </g>\n      </svg>\n    );\n  }\n\n}\n\n","import React, { PureComponent, Fragment } from 'react';\nimport { flatten } from 'lodash';\nimport { scaleLinear } from 'd3-scale';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { Axis, AxisOrientation } from './Axis';\nimport { Colors } from '../Constants';\n\nconst margins = {\n  left: 60,\n  right: 60,\n  top: 60,\n  bottom: 60,\n};\n\nconst CIRCLE_RADIUS = 5;\n\nexport class LineChart extends PureComponent {\n  state = {\n    lines: [], // actually line path\n    circles: [], // highlight data points on line\n\n    // d3 helpers\n    xScale: scaleLinear(),\n    yScale: scaleLinear(),\n    lineGenerator: line(),\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {data, width, height, multi, curve, showDataPoints} = nextProps;\n    const {xScale, yScale, lineGenerator} = prevState;\n\n    const dataToShow = multi ? flatten(data) : data;\n\n    const xExtent = extent(dataToShow, d => d.x);\n    const yExtent = extent(dataToShow, d => d.y);\n\n    const xOffset = 0.98;\n    const yOffset = 1.02;\n\n    xScale\n      .range([0, width - margins.right - margins.left])\n      .domain([xExtent[0] * xOffset, xExtent[1] * yOffset])\n      .nice();\n\n    yScale\n      .range([height - margins.bottom - margins.top, 0])\n      .domain([yExtent[0] * xOffset, yExtent[1] * yOffset])\n      .nice();\n\n    lineGenerator.x(d => {\n      return xScale(d.x);\n    });\n\n    lineGenerator.y(d => {\n      return yScale(d.y);\n    });\n\n    if (curve) {\n      lineGenerator.curve(curveMonotoneX)\n    }\n\n    const dataToGenerate = multi ? data : [data];\n    const lines = [];\n    const circles = [];\n\n    dataToGenerate.forEach((line, index) => {\n      const fill = Colors.path[index];\n\n      lines.push({\n        path: lineGenerator(line),\n        fill: fill,\n      });\n\n      if (showDataPoints) {\n        line.forEach((d) => {\n          const circle = {\n            x: xScale(d.x),\n            y: yScale(d.y),\n            fill: fill,\n          };\n          circles.push(circle);\n        });\n      }\n\n    });\n\n    return {\n      lines,\n      circles,\n    };\n  }\n\n  renderAxis() {\n    const {height} = this.props;\n    const {xScale, yScale} = this.state;\n\n    return (\n      <g>\n        <Axis\n          scale={xScale}\n          orientation={AxisOrientation.BOTTOM}\n          x={0}\n          y={height - margins.bottom - margins.top}\n        />\n        <Axis\n          scale={yScale}\n          orientation={AxisOrientation.LEFT}\n          x={0}\n          y={0}\n        />\n      </g>\n    )\n  }\n\n  renderData() {\n    const {lines, circles} = this.state;\n\n    return (\n      <Fragment>\n        {lines.map((line, i) => {\n          return (\n            <path\n              key={i}\n              d={line.path}\n              strokeWidth={2}\n              fill={'none'}\n              stroke={line.fill} />\n          );\n        })}\n\n        {circles.map((dot, i) => {\n          return (\n            <circle\n              key={i}\n              cx={dot.x}\n              cy={dot.y}\n              fill={dot.fill}\n              stroke={'#fff'}\n              r={CIRCLE_RADIUS}\n            />\n          );\n        })}\n      </Fragment>\n    )\n  }\n\n  render() {\n    const {width, height} = this.props;\n\n    return (\n      <svg width={width} height={height}>\n        <g transform={`translate(${margins.left}, ${margins.top})`}>\n          {this.renderAxis()}\n          {this.renderData()}\n        </g>\n      </svg>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { arc, pie } from 'd3-shape';\n\n\nexport class PieChart extends PureComponent {\n  state = {\n    arcGenerator: arc(),\n    pieGenerator: pie(),\n    slices: [],\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { data, colors, width, arcWidth } = nextProps;\n    const { arcGenerator, pieGenerator } = prevState;\n\n    const outerRadius = width / 2;\n    const innerRadius = outerRadius - arcWidth;\n\n    pieGenerator.value((d) => d).sort(null);\n\n    arcGenerator.innerRadius(innerRadius).outerRadius(outerRadius);\n\n    const slices = pieGenerator(data).map((value, i) => {\n      const slice = {\n        path: arcGenerator(value),\n        fill: colors[i],\n      };\n\n      return slice;\n    });\n\n    return {\n      slices,\n    };\n  }\n\n  render() {\n    const { width, height  } = this.props;\n    const { slices } = this.state;\n\n    return (\n      <svg height={height} width={width}>\n        <g transform={`translate(${width / 2}, ${height / 2})`}>\n          {slices.map((slice, i) => {\n            return <path key={i} d={slice.path} fill={slice.fill} />;\n          })}\n        </g>\n      </svg>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { flatten } from 'lodash';\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\nimport {  schemeCategory10  } from 'd3-scale-chromatic';\nimport { stack } from 'd3-shape';\nimport { max } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\nimport { Axis, AxisOrientation } from \"./Axis\";\n\nconst margins = {\n  left: 60,\n  right: 60,\n  top: 60,\n  bottom: 60,\n};\n\nconst BAR_PADDING = 0.1;\n\nexport class StackedBarChart extends PureComponent {\n  state = {\n    bars: [], // array of rects\n\n    // d3 helpers\n    xScale: scaleBand(),\n    yScale: scaleLinear(),\n    colorScale: scaleOrdinal(schemeCategory10),\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {data, width, height, keys} = nextProps;\n    const {xScale, yScale, colorScale} = prevState;\n\n    const xAccessor = (d) => d.index;\n    const timeDomain = data.map(xAccessor);\n\n    const stacked = stack().keys(keys);\n    const stackedData = stacked(data);\n\n    const maxYDomain = max(stackedData, (d) => (\n      max(d, (d2) => (\n        d2[1]\n      ))\n    ));\n\n    colorScale.domain([0, keys.length-1]);\n\n    xScale\n      .rangeRound([margins.left, width - margins.right])\n      .padding(BAR_PADDING)\n      .domain(timeDomain);\n\n    const yScaleRange = [height - margins.bottom, margins.top];\n    yScale\n      .range(yScaleRange)\n      .domain([0, maxYDomain])\n      .nice();\n\n    const bars = stackedData.map((stackedItem, index) => {\n      return stackedItem.map(value => {\n        const x = xScale(xAccessor(value.data));\n        const y = yScale(value[1]);\n        const barHeight = Math.abs(yScale(value[0]) - y);\n        const barWidth = xScale.bandwidth();\n        const fill = colorScale(index);\n\n        return {\n          x,\n          y,\n          height: barHeight,\n          width: barWidth,\n          fill,\n        };\n      });\n    });\n\n    return {\n      bars: flatten(bars),\n    };\n  }\n\n  render() {\n    const { width, height } = this.props;\n    const { bars, xScale, yScale} = this.state;\n\n    return (\n      <svg width={width} height={height}>\n        {bars.map((d, i) => (\n          <rect key={i} x={d.x} y={d.y} width={d.width} height={d.height} fill={d.fill}/>\n        ))}\n        <g>\n          <Axis\n            timeFormat={timeFormat('%b')}\n            scale={xScale}\n            orientation={AxisOrientation.BOTTOM}\n            x={0}\n            y={height - margins.bottom}\n          />\n          <Axis\n            timeFormat={(d) => `${d}`}\n            scale={yScale}\n            orientation={AxisOrientation.LEFT}\n            x={margins.left}\n            y={0}\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import React, {PureComponent} from 'react';\nimport './App.css';\n\nimport {Colors, barChartData} from \"./Constants\";\nimport {generateLineData, generateStackData, STACKED_BAR_KEYS} from './Util';\n\nimport {BarChart} from './components/BarChart';\nimport {LineChart} from './components/LineChart';\nimport {PieChart} from './components/PieChart';\nimport {StackedBarChart} from './components/StackedBarChart';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>React D3 Playground</h1>\n        </header>\n        <div className=\"charts-container\">\n          <BarChart\n            width={400}\n            height={500}\n            data={barChartData}\n          />\n          <LineChart\n            width={400}\n            height={500}\n            multi\n            data={\n              [\n                generateLineData(),\n                generateLineData(),\n                generateLineData()\n              ]\n            }\n          />\n          <LineChart\n            width={400}\n            height={500}\n            showDataPoints\n            multi\n            data={\n              [\n                generateLineData(),\n                generateLineData()\n              ]\n            }\n          />\n          <LineChart\n            width={400}\n            height={500}\n            showDataPoints\n            multi\n            curve\n            data={\n              [\n                generateLineData()\n              ]\n            }\n          />\n          <PieChart\n            width={200}\n            height={200}\n            data={[20, 10, 50, 70, 30]}\n            colors={Colors.path}\n            arcWidth={30}\n          />\n          <StackedBarChart\n            width={400}\n            height={400}\n            data={generateStackData()}\n            keys={STACKED_BAR_KEYS}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}